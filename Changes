Revision history for PAPS-Database-papsdb-Schema

0.007  Sun Mar 31 13:29:56 2013 -0400
  New features:
    - Added table algorithms, to store known algorithms which work on the data
      in the database.  This, along with an optional version number, will
      provide information about how decisions were made to make changes.
    - Added table personas.  A record in this table uniquely identifies a user
      and an algorithm, with an optional version number.  This should be used
      instead of a user id when tracking changes, to allow different versions
      of an algorithm to make different changes, and to identify how (that is,
      by what algorithm) changes were made.
    - Added table referenced_work_guesses, to keep track of guesses for what
      works are being referenced by a work reference, when no official
      referenced work is known.  The persona (user, algorithm, and version
      combination) that made the guess, and the last time that guess was
      checked, are stored with the guess.  A persona can only make a single
      guess for a work reference (although a different user can use the same
      algorithm and version to make a guess, and the same user and algorithm
      can make a guess with a different version).  Typically, two different
      users will not use the same algorithm and version to make a guess, but
      humans making manual guesses will not have an algorithm (or all have the
      same algorithm).
    - Added a persona_id and a modified column to the work_references table.
      This will allow keeping track of what persona made changes to this
      table.  For example, it will allow knowing what script added references
      for a work (e.g., PAPS-Refs-Importer).
    - Added a unique constraint to the work_references table on
      (referencing_work, type, chapter, rank).  This will make it easier to
      uniquely identify a record for a work's reference.
  Bug fixes:
    - Removed shebang line from the recreate-schema script.  This does not
      allow using a custom version of Perl (e.g., via PerlBrew) to run the
      script.
  Other:
    - Explicitly stated additional requirements in the Makefile, including
      some DBIx and Moose/MooseX modules.
    - Updated schema to DBIx-Class-Schema-Loader-0.07035.  Noticeable changes
      include making on_delete and on_update triggers default to "NO ACTION",
      instead of "CASCADE", and is_deferrable to 0, not 1.

0.006  Sat May 5 15:55:00 2012 -0400
  New features:
    - Added tables collections and collection_works, for storing collections
      and mapping works into collections, respectively.
    - Added view result set WorkToRead, which returns a set of works and user
      work data.  The set returned consists of all the works referencing a
      work (indicated by a parameter), recursively continuing through the
      references relationship, with an indicated user's work data (the user is
      indicated by the second parameter.
    - Added view result set WorkConnectedComponent, which, given a work and an
      optional user, returns a set of works with user work data, containing
      all works in the indicated work's connected component, using references
      as the relationship between works.
    - Added view result set ViewWorksWithUserData, which returns the set of
      all works with an indicated user's user work data.  This is needed due
      to not being able to add conditions to a join in DBIx relationships.

0.005  Sun Feb 26 12:53:27 2012 -0500
  New features:
    - Treat the password_hash column in the users table as an encoded column,
      so setting that value automatically encrypts the value provided before
      updating the table and passwords can be verified using built-in
      functionality (commit 062b987cda).
    - Retrieve the created_date for a user when inserting a new record.  This
      column has a default value of the current timestamp (commit e9159fc03c).
    - Added schema information, result classes, and relationships for the new
      table user_work_data, which stores information for each user relating to
      works.
    - Added support for the rank column in the source_work_categories table.
      This column indicates what rank each category is for a work (e.g., if it
      is a primary category versus a secondary category).
    - Added support for the new author metadata columns in work_authors table.
      The author_name_text column optionally stores the literal text used in
      the work to name an author.  This can be used to keep track of how an
      author is named and to store a name for an author whose definitive
      "person" information has not yet been found.  The second new column,
      author_affiliation_text, optionally stores the literal text used to
      describe the author's affiliation.  Since there is no definitive way to
      store affiliation information, this will be the only way, for now, to
      keep track of an author's affiliation.  Later, like the author_name_text
      column, it will be used to keep track of how an affiliation is named and
      to keep track of affiliations that have not be definitively identified
      yet.
    - Include the new work_authors columns in the authors many-to-many
      relationship in the Work result class (commit fcb3880cf8).
    - Include the rank column from the source_work_categories table in the
      Work result class's source_categories many-to-many relationshiop (commit
      d9f6ffb5ec).
  Bug fixes:
    - The GroupUser's belongs_to relationship to the Groups result class,
      named "group", causes SQL to be created that uses the reserved word
      "group" incorrectly.  This relationship has now been redefined to the
      more innocuous name "grp" (commit 10bcdb2187).
    - Removed the NOT NULL constraint on the person_id column in the
      work_authors table.  If we only store the literal text used to reference
      a person in a work, but do not have a valid Person object, the person_id
      column will be null and should not cause an error (commit c97891b368).

0.004  Sun Jan 22 21:57:15 2012 -0500
  New features:
    - The referencing_works many-to-many relationship in the Work class now
      includes the same fields from the work_references table that the
      referenced_works relationship includes (commit 4b2f7fd9c2).
    - Added display_name methods for the SourceCategory, SourceCategoryType,
      SourceTag, and SourceTagTypes Result classes.  These, for now, just use
      the name field as the display name (comits b4595d0982 and 2fe112aa38).
    - Added a work_count method to the Source model, which returns the number
      of works that belong to the source (comit 277fe172c3).
    - Added a "year" column, a smallint, to the works table.
  Bug fixes:
    - The many-to-many relationship works in the People class referenced an
      incorrect (nonexistent) belongs_to relationship in the Works class
      (commit 4b2f7fd9c2).
    - The has-many relationships from Work to WorkReferences did not reflect
      the correct interpretation for these relationships.  These have been
      switched, so, for example, now the referenced_works relationship gives
      the list of works that that Work object references (commit 4e93443f94).
  Other:
    - Updated schema to DBIx-Class-Schema-Loader-0.07015.  Among other smaller
      changes, this version is able to determine "Person" is the singular form
      of "People", so the People Schema class has now been replaced by the
      Person class.

0.003  Sat Aug 6 12:53:36 2011 -0400
  New features:
    - Added Result classes for tag-, category- and metadata-related tables.
      This includes both the "source" and "official" versions of these tables,
      where appropriate, and mapping tables to relate source to official data.

0.002  Sat Jun 25 16:01:11 2011 -0400
  New features:
    - Added Result classes for user-, group-, and permissions-related tables.
    - Added Result classes for source- and file-related tables.
    - Added many-to-many relationships between new Result classes, as needed.
    - Added display_name methods for virtually all classes, which are used to
      create a short, descriptive string for objects of those classes.
    - Updated schema file to create all of the tables and populate them with
      sample data.
    - Added scripts to recreate the Result classes based on the database
      tables and create a schema diagram from the database.

0.001  2011-06-04 17:53:35 2011 -0400
  New features:
    - Initial version of the PAPS db schema.  Contains Result classes for all
      of the tables currently in the database.

